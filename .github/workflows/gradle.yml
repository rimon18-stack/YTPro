name: Build and Sign YTPro APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-sign:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Make gradlew executable
      run: icacls gradlew.bat /grant Everyone:RX

    - name: Build Release APK
      run: ./gradlew.bat assembleRelease --no-daemon
      env:
        JAVA_OPTS: -Xmx2048m -XX:MaxPermSize=512m

    - name: Verify APK exists
      run: |
        $apkPath = "app/build/outputs/apk/release/app-release-unsigned.apk"
        if (Test-Path $apkPath) {
          Write-Host "APK found at $apkPath"
          Write-Host "File size: $((Get-Item $apkPath).Length) bytes"
        } else {
          Write-Host "APK not found at $apkPath"
          Get-ChildItem -Path "app" -Recurse -Filter "*.apk" | ForEach-Object { Write-Host "Found APK: $($_.FullName)" }
          exit 1
        }

    - name: Setup signing tools
      run: |
        # Create signer directory if it doesn't exist
        if (!(Test-Path "signer")) {
          New-Item -ItemType Directory -Path "signer" | Out-Null
        }
        # Download ApkSigner if not present (you should commit these to your repo instead)
        if (!(Test-Path "signer/ApkSigner.jar")) {
          Write-Host "ApkSigner.jar not found in signer directory"
          Write-Host "Please add your signing files to the signer directory"
          exit 1
        }

    - name: Sign APK
      run: |
        $unsignedApk = "app/build/outputs/apk/release/app-release-unsigned.apk"
        $signedApk = "app/build/outputs/apk/release/youtube_pro_signed.apk"
        
        if (Test-Path $unsignedApk) {
          java -jar "signer/ApkSigner.jar" sign `
            --key "signer/apkeasytool.pk8" `
            --cert "signer/apkeasytool.pem" `
            --v4-signing-enabled false `
            --out $signedApk `
            $unsignedApk
          
          if (Test-Path $signedApk) {
            Write-Host "APK signed successfully: $signedApk"
            Write-Host "Signed file size: $((Get-Item $signedApk).Length) bytes"
          } else {
            Write-Host "Failed to create signed APK"
            exit 1
          }
        } else {
          Write-Host "Unsigned APK not found: $unsignedApk"
          exit 1
        }

    - name: Upload signed APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: YTPro-Signed-APK
        path: app/build/outputs/apk/release/youtube_pro_signed.apk
        if-no-files-found: error
        retention-days: 7

    - name: Show build summary
      run: |
        Write-Host "=============================================="
        Write-Host "BUILD SUMMARY"
        Write-Host "=============================================="
        Write-Host "Repository: $env:GITHUB_REPOSITORY"
        Write-Host "Workflow: $env:GITHUB_WORKFLOW"
        Write-Host "Run ID: $env:GITHUB_RUN_ID"
        Write-Host "Artifact: YTPro-Signed-APK"
        
        $apkPath = "app/build/outputs/apk/release/youtube_pro_signed.apk"
        if (Test-Path $apkPath) {
          $fileSize = (Get-Item $apkPath).Length
          $fileSizeMB = [math]::Round($fileSize / 1MB, 2)
          Write-Host "APK Size: $fileSizeMB MB"
          Write-Host "APK Path: $apkPath"
        }
        Write-Host "=============================================="
